name: Get Branch info

on: 
  pull_request:
    branches:
      - '*'
  push:
    branches:
      - '*'

jobs:
  changelog:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Branch Info
      id: get-info-branch
      uses: ./.github/composite-actions/get-branch-info
      with:
        branch_name: ${{ github.ref_name }}
        project_name: translation
    
    - name: Display info
      id: display-info
      run: |
        echo "Pull Request: ${{ steps.get-info-branch.outputs.pull_request }}"
        echo "Version: ${{ steps.get-info-branch.outputs.version }}"
        echo "Release: ${{ steps.get-info-branch.outputs.release }}"
        echo "Feature: ${{ steps.get-info-branch.outputs.feature }}"
        echo "Tag: ${{ steps.get-info-branch.outputs.tag }}"
        echo "Setup Name: ${{ steps.get-info-branch.outputs.setup_name }}"

#    - name: Get last workflow run SHA
#      id: last-run
#      run: |
#        LAST_RUN_SHA=$(git log -1 --format=%H --grep="Changelog generated by GitHub Actions")
#        echo "sha=$LAST_RUN_SHA" >> "GITHUB_OUTPUT"
#
#    - name: Generate changelog
#      id: changelog
#      run: |
#        if [ -z "${{ steps.last-run.outputs.sha }}" ]; then
#          echo "No previous changelog found. Generating changelog from the beginning of the branch."
#          git log --pretty=format:"%h - %s (%an, %ar)" > CHANGELOG.md
#        else
#          echo "Generating changelog since last run."
#          git log ${{ steps.last-run.outputs.sha }}..HEAD --pretty=format:"%h - %s (%an, %ar)" > CHANGELOG.md
#        fi
#
#    - name: Commit and push changelog
#      run: |
#        git config --global user.name "github-actions"
#        git config --global user.email "github-actions@github.com"
#        git add CHANGELOG.md
#        git commit -m "Changelog generated by GitHub Actions"
#        git push
#
#    - name: Set GIT_PREVIOUS_COMMIT
#      id: set-previous-commit
#      run: |
#        if git rev-parse HEAD^ >/dev/null 2>&1; then
#          echo "GIT_PREVIOUS_COMMIT=$(git rev-parse HEAD^)" >> $GITHUB_ENV
#        else
#          echo "GIT_PREVIOUS_COMMIT=$(git rev-parse HEAD)" >> $GITHUB_ENV
#        fi
#
#    - name: Generate Changelog
#      id: generate-changelog
#      run: |
#        title="Build"
#        log="${title} #${{ github.run_number }}\n\n"
#        changeLogSets=$(git log --pretty=format:"%s by %an" ${{ env.GIT_PREVIOUS_COMMIT }}..HEAD)
#        for entry in $changeLogSets; do
#          msg=$(echo $entry | sed "s/'//g")
#          log="${log}* ${msg}\n"
#        done
#        log="${log}\n\nGo to ${{ github.event.repository.html_url }}/actions/runs/${{ github.run_id }} to see the full log"
#        echo -e "$log" > ${{ github.workspace }}/changelog.log
#
#    - name: Debug GIT_PREVIOUS_COMMIT
#      run: echo "GIT_PREVIOUS_COMMIT=${{ env.GIT_PREVIOUS_COMMIT }}"
#
#    - name: Debug changeLogSets
#      run: |
#        changeLogSets=$(git log --pretty=format:"%s by %an" ${{ env.GIT_PREVIOUS_COMMIT }}..HEAD)
#        echo "changeLogSets=${changeLogSets}"
#
#    - name: Upload JAR artifact
#      uses: actions/upload-artifact@v4
#      with:
#        name: file
#        path: ${{ github.workspace }}/changelog.log
#        if-no-files-found: error
#        retention-days: 1
