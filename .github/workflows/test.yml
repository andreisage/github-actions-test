name: Generate Changelog

on:
  push:
    branches:
      - main

jobs:
  changelog:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set GIT_PREVIOUS_COMMIT
      id: set-previous-commit
      run: |
        if git rev-parse HEAD^ >/dev/null 2>&1; then
          echo "GIT_PREVIOUS_COMMIT=$(git rev-parse HEAD^)" >> $GITHUB_ENV
        else
          echo "GIT_PREVIOUS_COMMIT=$(git rev-parse HEAD)" >> $GITHUB_ENV
        fi

    - name: Generate Changelog
      id: generate-changelog
      run: |
        title="Build"
        log="${title} #${{ github.run_number }}\n\n"
        changeLogSets=$(git log --pretty=format:"%s by %an" ${{ env.GIT_PREVIOUS_COMMIT }}..HEAD)
        for entry in $changeLogSets; do
          msg=$(echo $entry | sed "s/'//g")
          log="${log}* ${msg}\n"
        done
        log="${log}\n\nGo to ${{ github.event.repository.html_url }}/actions/runs/${{ github.run_id }} to see the full log"
        echo "$log" > ${{ github.workspace }}/changelog.log

    - name: Debug GIT_PREVIOUS_COMMIT
      run: echo "GIT_PREVIOUS_COMMIT=${{ env.GIT_PREVIOUS_COMMIT }}"

    - name: Debug changeLogSets
      run: |
        changeLogSets=$(git log --pretty=format:"%s by %an" ${{ env.GIT_PREVIOUS_COMMIT }}..HEAD)
        echo "changeLogSets=${changeLogSets}"

    - name: Upload JAR artifact
      uses: actions/upload-artifact@v4
      with:
        name: file
        path: ${{ github.workspace }}/changelog.log
        if-no-files-found: error
        retention-days: 1

    - name: Save Changelog
      if: env.SETUP_NAME
      run: |
        cp ${{ github.workspace }}/changelog.log ${{ github.workspace }}/${{ env.SETUP_NAME }}.log


  info-branch:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Info
      uses: ./.github/composite-actions/get-branch-info
      with:
        branch_name: ${{ github.ref_name }}
        project_name: mongo-db
        os:

    - name: Print setup name
      run: echo "Setup name is ${{ steps.setup.outputs.setupName }}"